/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2022-06-23 07:31:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/common/footerAdmin.jsp", Long.valueOf(1655949770438L));
    _jspx_dependants.put("/common/headerAdmin.jsp", Long.valueOf(1655949770442L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("プログラム名\t\t：ユニフォーム受注管理システム E組チーム１  error.jsp\r\n");
      out.write("プログラムの説明\t：ユニフォーム受注管理システムのエラー画面です。\r\n");
      out.write("作成者\t\t\t\t：船橋 生澄\r\n");
      out.write("作成日\t\t\t\t：2022年6月23日\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//エラー内容をリクエストスコープから取得
	String error = (String) request.getAttribute("error");
	//遷移先をリクエストスコープから取得
	String cmd = (String) request.getAttribute("cmd");

	//各値が取得できなかった場合に空文字を代入
	if(error == null){
		error = "";
	}
	if(cmd == null){
		cmd = "";
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>エラー画面</title>\r\n");
      out.write("<link rel=\"stylesheet\"href=\"");
      out.print( request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- ヘッダ -->\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<!-- http://localhost:8080/UniformTeam1/common/headerAdmin.jsp -->\r\n");
      out.write("\t<head>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("\t\t<title>ヘッダー</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<h2 class = \"admin\">ユニフォーム受注管理システム</h2>\r\n");
      out.write("\t\t<hr class=\"adminhr\">\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\" id=\"main\" class=\"container\">\r\n");
      out.write("\t<h1>エラー画面</h1>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<h2>●エラー●</h2>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<!-- コンテンツ部分 -->\r\n");
      out.write("<div align=\"center\"  id=\"main\" class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- エラーメッセージ  -->\r\n");
      out.write("\t<p class=\"error-msg\">");
      out.print(error );
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\r\n");
      out.write("\t<!--\r\n");
      out.write("\tリンク先(cmdの値によって変化)\r\n");
      out.write("\t一覧画面はサーブレットに、その他画面はjspに遷移\r\n");
      out.write("\t -->\r\n");
      out.write("\r\n");
      out.write("\t");
 if(cmd.equals("login")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/login.jsp\">[ログイン画面に戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("listUniform")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/listUniform\">[商品一覧に戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("showCart")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/showCart\">[カート一覧に戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("inputUser")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/inputUser.jsp\">[購入者情報入力に戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("insertMember")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/insertMember.jsp\">[新規登録画面に戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("menuAdmin")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/menuAdmin.jsp\">[管理者メニューに戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("uniformManagementMenu")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/uniformManagementMenu\">[商品管理メニューに戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("orderManagementMenu")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/orderManagementMenu\">[受注管理メニューに戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("listOrderManagement")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/listOrderManagement\">[受注一覧に戻る]</a>\r\n");
      out.write("\t");
 } else if(cmd.equals("showSales")){ 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/showSales\">[売り上げ状況に戻る]</a>\r\n");
      out.write("\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/login.jsp\">[ログイン画面に戻る]</a>\r\n");
      out.write("\t");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<!-- フッター -->\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<!-- http://localhost:8080/UniformTeam1/common/footerAdmin.jsp -->\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>フッター</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t<hr class=\"adminhr\">\r\n");
      out.write("\t\t\t<h4 class = \"admin\">Copyright (C) 2022 All Rights Reserved.</h4>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
