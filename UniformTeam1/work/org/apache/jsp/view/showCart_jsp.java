/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2022-06-24 04:49:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.*;
import java.util.ArrayList;

public final class showCart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/common/footerUser.jsp", Long.valueOf(1655949770440L));
    _jspx_dependants.put("/common/headerUser.jsp", Long.valueOf(1655949770444L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("bean");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("プログラム名\t\t：ユニフォーム受注管理システム E組チーム１ ShowCart.jsp\r\n");
      out.write("プログラムの説明\t：ユニフォーム受注管理システム カート一覧のjsp\r\n");
      out.write("作成者\t\t\t\t：野島千陽\r\n");
      out.write("作成日\t\t\t\t：2022年6月24日\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//リクエストスコープから商品情報の受けとり
	ArrayList<Sale> sale_list = (ArrayList<Sale>)request.getAttribute("sale_list");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- http://localhost:8080/UniformTeam1/view/showCart.jsp -->\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>カート内容</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t<!-- ヘッダー部分 -->\r\n");
      out.write("\t<!-- ユーザー用ヘッダーをインクルード -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<!-- http://localhost:8080/UniformTeam1/common/headerUser.jsp -->\r\n");
      out.write("\t<head>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("\t\t<title>ヘッダー</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<h1 class = \"user\">株式会社　神田ユニフォーム</h1>\r\n");
      out.write("\t\t<hr class=\"userhr\">\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\t\t<h2 class = \"user\">カート内容</h2>\r\n");
      out.write("\t\t<hr class = \"userhr\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- リンクテーブル -->\r\n");
      out.write("\t\t<table class = \"cartList\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<button id = \"list\">商品一覧へ</button></td>\r\n");
      out.write("\t\t<td style= \"width:600;\">　　</td>\r\n");
      out.write("\t\t<td><button id = \"log\">ログイン</button></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<hr class = \"userhr\">\r\n");
      out.write("\r\n");
      out.write("<!-- 注意事項 -->\r\n");
      out.write("<p>※備考部分に書いた文章は購入以外の画面に移動すると、消えてしまいます。画面を移動する際はお気をつけ下さい。</p>\r\n");
      out.write("\t<!-- 一覧表示 -->\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/LoginCheckServlet.java \" method=\"get\">\r\n");
      out.write("\t\t<table class= \"cartList\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>商品名</th>\r\n");
      out.write("\t\t\t\t<th>商品画像</th>\r\n");
      out.write("\t\t\t\t<th>価格</th>\r\n");
      out.write("\t\t\t\t<th>数量</th>\r\n");
      out.write("\t\t\t\t<th>備考</th>\r\n");
      out.write("\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

				int total = 0;
				if( sale_list != null){
					for(int i=0; i <  sale_list.size() ; i++){
						Sale sale  = (Sale)sale_list.get(i);

						total += sale.getQuantity() * sale.getPrice();
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href = \"");
      out.print(request.getContextPath());
      out.write("/detailUniform?id=");
      out.print(sale.getId());
      out.write("&cmd=detailUniform\">");
      out.print(sale.getUniformName() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><img src = \"");
      out.print(request.getContextPath());
      out.write("/img/");
      out.print(sale.getImage());
      out.write("\" alt =\"");
      out.print(sale.getUniformName() );
      out.write("\" width = \"100\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(sale.getPrice());
      out.write("円</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(sale.getQuantity());
      out.write("着</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class = \"text\"><textarea name = \"remarks\" rows = \"5\" cols = \"30\" id = \"text\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href=\"");
      out.print(request.getContextPath());
      out.write("/showCart?delno=");
      out.print(i);
      out.write("\">削除</a></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t");
} else {
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>　　</td>\r\n");
      out.write("\t\t\t\t<td>　　</td>\r\n");
      out.write("\t\t\t\t<td>　　</td>\r\n");
      out.write("\t\t\t\t<td>　　</td>\r\n");
      out.write("\t\t\t\t<td class = \"text\"><textarea name = \"remarks\" rows = \"5\" cols = \"30\" id = \"text\"  style=\"display:none;\"></textarea></td>\r\n");
      out.write("\t\t\t\t<td>　　</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<textarea name = \"remarks\" rows = \"5\" cols = \"30\" id = \"text\"  style=\"display:none;\"></textarea>\r\n");
      out.write("\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t<button id = \"sum\" value = \"");
      out.print(total);
      out.write("\" type = \"button\">合計金額</button>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<br><br><br>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t<input type = \"submit\" value = \"購入\" name=\"buy\" class=\"button\">\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t<br><br><br>\r\n");
      out.write("\r\n");
      out.write("\t<!-- ユーザー用フッターをインクルード -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<!-- http://localhost:8080/UniformTeam1/common/footerUser.jsp -->\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>フッター</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t<hr class=\"userhr\">\r\n");
      out.write("\t\t\t<h4 class = \"user\">Copyright (C) 2022 All Rights Reserved.</h4>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tdocument.getElementById('list').onclick = function(){\r\n");
      out.write("\t\tvar element = document.getElementById('text');\r\n");
      out.write("\t\tif (element.value != \"\"){\r\n");
      out.write("\t\t\tvar con = confirm('このまま画面を移動した場合、備考の入力情報が消えてしまいます。画面を移動してもよろしいですか?');\r\n");
      out.write("\t\t\tif (con){\r\n");
      out.write("\t\t\t\twindow.location.href='");
      out.print(request.getContextPath());
      out.write("/listUniform';\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\twindow.location.href='");
      out.print(request.getContextPath());
      out.write("/listUniform';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tdocument.getElementById('log').onclick = function(){\r\n");
      out.write("\t\tvar element = document.getElementById('text');\r\n");
      out.write("\t\tif (element.value != \"\"){\r\n");
      out.write("\t\t\tvar con = confirm('このまま画面を移動した場合、備考の入力情報が消えてしまいます。画面を移動してもよろしいですか?');\r\n");
      out.write("\t\t\tif (con){\r\n");
      out.write("\t\t\t\twindow.location.href='");
      out.print(request.getContextPath());
      out.write("/login';\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\twindow.location.href='");
      out.print(request.getContextPath());
      out.write("/login';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tdocument.getElementById('sum').onclick = function(){\r\n");
      out.write("\r\n");
      out.write("\t\talert(\"現在、カート内商品の合計金額は\" + sum.value + \"円です。\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
